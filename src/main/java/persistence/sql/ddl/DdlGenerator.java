package persistence.sql.ddl;

import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import persistence.sql.dialect.Dialect;
import persistence.sql.meta.EntityPrimaryKey;

import java.lang.reflect.Field;

import static persistence.sql.dialect.JavaClassCodeTypeMappings.getJavaClassToJdbcCodeType;

public class DdlGenerator {

    // id bigint generated by default as identity, old integer, email varchar(255) not null
    public static String primaryKeyColumns(final EntityPrimaryKey entityPrimaryKey, final Dialect dialect) {
        final String fieldName = entityPrimaryKey.name();

        final String dataType = dialect.getColumnType(getJavaClassToJdbcCodeType(entityPrimaryKey.type()));
        entityPrimaryKey.strategy();
        createGenerateTypeDDL(f);

        return "";
    }

    public static String constraint() {
        return "";
    }

    public static String createPrimaryKeyGenerateDDL(final Field field, final Dialect dialect) {
        if (field.isAnnotationPresent(Id.class)) {
            return createGenerateTypeDDL(field, dialect);
        }

        return "";
    }

    private static String createGenerateTypeDDL(final Field field, final Dialect dialect) {
        if (field.isAnnotationPresent(GeneratedValue.class)) {
            return dialect.generatorCreatePrimaryDdl(field.getAnnotation(GeneratedValue.class).strategy());
        }

        return "";
    }
}
