package persistence.sql.ddl;

import persistence.sql.dialect.Dialect;
import persistence.sql.meta.EntityColumns;
import persistence.sql.meta.EntityPrimaryKey;
import persistence.sql.meta.EntityTableMeta;

public class DdlQueryBuilder {

    public static final String COMMA = ", ";
    private final EntityTableMeta entityTableMeta;
    private final EntityColumnMeta entityColumnMeta;
    private final EntityPrimaryKey entityPrimaryKey;
    private final EntityColumns entityColumns;
    private final Dialect dialect;

    public DdlQueryBuilder(final Class<?> clazz, final Dialect dialect) {
        this.entityTableMeta = EntityTableMeta.of(clazz);
        this.entityColumnMeta = EntityColumnMeta.of(clazz, dialect);
        this.entityPrimaryKey = EntityPrimaryKey.of(clazz);
        this.entityColumns = EntityColumns.of(clazz);
        this.dialect = dialect;
    }

    // "create table %s (%s)"
    // "create table person1 (id bigint not null, age integer, name varchar(255), primary key (id))";
    // "create table person2 (id bigint generated by default as identity, old integer, email varchar(255) not null, nick_name varchar(255), primary key (id))";
    // "create table users (id bigint generated by default as identity, old integer, email varchar(255) not null, nick_name varchar(255), primary key (id))";
    public String createDdl() {
//        return String.format(dialect.getCreateDefaultDdlQuery(), this.entityTableMeta.name(), this.entityColumnMeta.createColumnType());
        return String.format(dialect.getCreateDefaultDdlQuery(), createColumns());
    }

    private String createColumns() {
        return String.join(COMMA, primaryKeyColumns(), columns(), constraint());
    }

    private String primaryKeyColumns() {
        return DdlGenerator.primaryKeyColumns(this.entityPrimaryKey, dialect);
    }

    private String columns() {
        this.entityColumns.getEntityColumns();
        return String.join(COMMA, );
    }

    private String constraint() {
        return "";
    }

    // "drop table if exists %s CASCADE"
    public String dropDdl() {
        return String.format(dialect.getDropDefaultDdlQuery(), this.entityTableMeta.name());
    }
}
